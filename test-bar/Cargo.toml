[package]
name = "test_bar"
version = "0.0.1"
edition = "2021"

[lib]
path = "src/lib.rs"
crate-type = ["cdylib"]
required-features = []

[dependencies]
# To use common shared libs, use the following:
# common-lib = { path = "../../common-rust/common-lib" }

golem-rust = { workspace = true }
reqwest = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }
wit-bindgen-rt = { workspace = true }

[package.metadata.component.bindings]

[package.metadata.component.bindings.with]
# "wasi:clocks/wall-clock@0.2.0" = "golem_rust::wasm_rpc::wasi::clocks::wall_clock"
# "wasi:io/poll@0.2.0" = "golem_rust::wasm_rpc::wasi::io::poll"
# "golem:rpc/types@0.2.0" = "golem_rust::wasm_rpc::golem_rpc_0_2_x::types"

[package.metadata.component.target]
path = "../wit-generated/test-bar"
world = "component"

[package.metadata.component.target.dependencies]
"wasi:clocks" = { path = "../wit/deps/clocks" }
"wasi:io" = { path = "../wit/deps/io" }
"golem:rpc" = { path = "../wit/deps/golem-rpc" }
"golem:api" = { path = "../wit/deps/golem-1.x" }
"test:types" = { path = "../wit-generated/test-types" }
"test:bar-api" = { path = "../wit-generated/test-bar-api" }
"test:foo-api" = { path = "../wit-generated/test-foo-api" }

#"test:composition" = { path = "../wit-generated/test-composition" }
#"test:foo-client" = { path = "wit-generated/deps/test_foo-client" }
#"test:bar-exports" = { path = "wit-generated/deps/test_bar-exports" }
#"test:foo-client" = { path = "../wit-generated/test-foo-api-client" }
#"test:bar-client" = { path = "../wit-generated/test-bar-api-client" }
# "test:composition" = { path = "../wit-generated" }
# "test:composition" = { path = "../wit-generated/test-composition" }
# "test:foo" = { path = "../wit-generated/test-foo" }

# See https://github.com/bytecodealliance/cargo-component/blob/main/src/metadata.rs#L62

# derives = ["serde::Serialize", "serde::Deserialize"]
# generate_unused_types = true
